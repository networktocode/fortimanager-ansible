---
- name: "CREATE SESSION ID FOR UNIT TESTS"
  hosts: "fortimanager"
  gather_facts: false
  tags: "policy, cleanup"
  tasks:
    - name: "FORTIMANAGER LOCK - CHANGE"
      fortimgr_lock:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        lock: true
      register: session

    - name: "SET SESSION ID"
      set_fact:
        session_id: "{{ session.session_id }}"

- name: "CREATE FORTIMANAGER OBJECTS FOR UNIT TESTS"
  hosts: "fortimanager"
  gather_facts: false
  tasks:
    - name: "CREATE ADDRESS OBJECTS - CHANGE"
      fortimgr_address:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        address_name: "{{ item.name }}"
        address_type: "ipmask"
        subnet:
          - "{{ item.ip }}"
          - "255.255.255.255"
      loop:
        - name: "srcaddr1"
          ip: "10.1.1.1"
        - name: "srcaddr2"
          ip: "10.1.1.2"
        - name: "srcaddr3"
          ip: "10.1.1.3"
        - name: "srcaddr4"
          ip: "10.1.1.4"
        - name: "srcaddr5"
          ip: "10.1.1.5"
        - name: "srcaddr6"
          ip: "10.1.1.6"

    - name: "CREATE SERVICE - CHANGE"
      fortimgr_service:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        service_name: "{{ item.name }}"
        protocol: TCP
        port_range:
          - "{ item.port }}"
      loop:
        - name: "svc1"
          port: 1
        - name: "svc2"
          port: 2
        - name: "svc3"
          port: 3

    - name: "CREATE IP POOL - CHANGE"
      fortimgr_ip_pool:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        pool_name: "{{ item.name }}"
        type: "overload"
        start_ip: "{{ item.start }}"
        end_ip: "{{ item. end }}"
      loop:
        - name: "pool1"
          start: "200.1.1.1"
          end: "200.1.1.1"
        - name: "pool2"
          start: "200.1.1.2"
          end: "200.1.1.2"
        - name: "pool3"
          start: "200.1.1.3"
          end: "200.1.1.3"

    - name: "CREATE VIP - CHANGE"
      fortimgr_vip:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        vip_name: "{{ item.name }}"
        type: "static-nat"
        external_ip:
          - "{{ item.ext }}"
        mapped_ip:
          - "{{ item.map }}"
      loop:
        - name: "vip1"
          ext: "100.10.10.10"
          map: "10.10.10.10"
        - name: "vip2"
          ext: "100.10.10.11"
          map: "10.10.10.11"
        - name: "vip3"
          ext: "100.10.10.12"
          map: "10.10.10.12"

    - name: "FORTIMANAGER SAVE - CHANGE"
      fortimgr_lock:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        adom: "lab"
        save: true


- name: "FORTIMANAGER POLICY UNITTESTS"
  hosts: "fortimanager"
  gather_facts: false
  tags: "policy"
  tasks:
    - name: "DELETE NONEXISTENT POLICY - NO CHANGE"
      fortimgr_policy:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        package: "lab"
        policy_name: "unittest_nonexistent_policy_name"
        state: "absent"
      register: "fmg_results"

    - assert:
        that: "not fmg_results['changed']"

    - name: "CREATE DENY POLICY - CHANGE"
      fortimgr_policy:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        package: "lab"
        policy_name: "unittest_explicit_deny"
        action: "deny"
        log_traffic: "disable"
        destination_address:
          - "all"
        destination_intfc:
          - "any"
        schedule:
          - "always"
        service:
          - "ALL"
        source_address:
          - "all"
        source_intfc:
          - "any"
      register: "fmg_results"

    - assert:
        that: "fmg_results['changed']"

    - name: "CREATE POLICY - CHANGE"
      fortimgr_policy:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        package: "lab"
        global_label: "unit test"
        action: "accept"
        log_traffic: "all"
        destination_address:
          - "vip1"
        destination_intfc:
          - "any"
        schedule:
          - "always"
        service:
          - "svc1"
        source_address:
          - "srcaddr1"
        source_intfc:
          - "any"
        nat: "enable"
        ip_pool: "enable"
        pool_name: "pool1"
        direction: "before"
        reference_policy_name: "unittest_explicit_deny"
      register: "policy1"

    - assert:
        that: "policy1['changed']"

    - name: "SET POLICY ID"
      set_fact:
        first_policy_id: "{{ policy1.config.params[0].data.policyid }}"

    - name: "CREATE POLICY AGAIN - NO CHANGE"
      fortimgr_policy:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        package: "lab"
        policy_id: "{{ first_policy_id }}"
        global_label: "unit test"
        action: "accept"
        log_traffic: "all"
        destination_address:
          - "vip1"
        destination_intfc:
          - "any"
        schedule:
          - "always"
        service:
          - "svc1"
        source_address:
          - "srcaddr1"
        source_intfc:
          - "any"
        nat: "enable"
        ip_pool: "enable"
        pool_name: "pool1"
        direction: "before"
        reference_policy_name: "unittest_explicit_deny"
      register: "fmg_results"

    - assert:
        that: "not fmg_results['changed']"

    - name: "CREATE POLICY WITH PROVIDER - NO CHANGE"
      fortimgr_policy:
        provider:
          host: "{{ ansible_host }}"
          session_id: "{{ session_id }}"
          lock: false
          adom: "lab"
          package: "lab"
          policy_id: "{{ first_policy_id }}"
          global_label: "unit test"
          action: "accept"
          log_traffic: "all"
          destination_address: "vip1"
          destination_intfc: "any"
          schedule: "always"
          service: "svc1"
          source_address: "srcaddr1"
          source_intfc: "any"
          nat: "enable"
          ip_pool: "enable"
          pool_name: "pool1"
          direction: "before"
          reference_policy_name: "unittest_explicit_deny"
      register: "fmg_results"

    - assert:
        that: "not fmg_results['changed']"

    - name: "CREATE POLICY OVERRIDE PROVIDER - CHANGE"
      fortimgr_policy:
        provider:
          host: "{{ ansible_host }}"
          session_id: "{{ session_id }}"
          lock: false
          adom: "lab"
          package: "lab"
          global_label: "unit test"
          action: "accept"
          log_traffic: "all"
          destination_address: "vip1"
          destination_intfc: "any"
          schedule: "always"
          service: "svc1"
          source_address: "srcaddr1"
          source_intfc: "any"
          nat: "enable"
          ip_pool: "enable"
          pool_name: "pool1"
        package: "default"
        policy_name: "provider_policy1"
        policy_id: null
        global_label: "provider unit test"
        action: "deny"
        log_traffic: "disable"
        destination_address: "vip2"
        destination_intfc: "port2"
        schedule: "always"
        service: "svc2"
        source_address: "srcaddr2"
        source_intfc: "port1"
        nat: "enable"
        ip_pool: "enable"
        pool_name: "pool2"
      register: "fmg_results"

    - assert:
        that: "fmg_results['changed']"

    - name: "MODIFY POLICY ADD - CHANGE"
      fortimgr_policy:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        package: "lab"
        policy_id: "{{ first_policy_id }}"
        global_label: "unit test"
        action: "accept"
        destination_address:
          - "vip2"
        destination_intfc:
          - "any"
        schedule:
          - "always"
        service:
          - "svc1"
          - "svc2"
        source_address:
          - "srcaddr1"
          - "srcaddr2"
          - "srcaddr3"
        source_intfc:
          - "any"
        nat: disable
        ip_pool: "disable"
      register: "fmg_results"

    - assert:
        that: "fmg_results['changed']"

    - name: "FORTIMANAGER SAVE - CHANGE"
      fortimgr_lock:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        adom: "lab"
        save: true
      register: "fmg_results"

    - assert:
        that: "fmg_results['changed']"

    - name: "MODIFY POLICY REMOVE - CHANGE"
      fortimgr_policy:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        package: "lab"
        policy_id: "{{ first_policy_id }}"
        global_label: "unit test"
        action: "deny"
        destination_address:
          - "vip1"
        schedule:
          - "always"
        service:
          - "svc1"
        source_address:
          - "srcaddr1"
          - "srcaddr2"
        state: "param_absent"
      register: "fmg_results"

    - assert:
        that: "fmg_results['changed']"

    - name: "FORTIMANAGER SAVE - CHANGE"
      fortimgr_lock:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        adom: "lab"
        save: true
      register: "fmg_results"

    - assert:
        that: "fmg_results['changed']"

    - name: "CREATE POLICY - CHANGE"
      fortimgr_policy:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        package: "lab"
        global_label: "unit test"
        action: "accept"
        log_traffic: "all"
        destination_address:
          - "vip3"
        destination_intfc:
          - "any"
        schedule:
          - "always"
        service:
          - "svc1"
        source_address:
          - "srcaddr5"
          - "srcaddr6"
        source_intfc:
          - "any"
        nat: "enable"
        ip_pool: "enable"
        pool_name: "pool1"
        direction: "after"
        reference_policy_id: "{{ first_policy_id }}"
      register: "policy2"

    - assert:
        that: "policy2['changed']"

    - name: "SET POLICY ID"
      set_fact:
        second_policy_id: "{{ policy2.config.params[0].data.policyid }}"

    - name: "FORTIMANAGER SAVE - CHANGE"
      fortimgr_lock:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        adom: "lab"
        save: true
      register: "fmg_results"

    - assert:
        that: "fmg_results['changed']"

    - name: "MODIFY POLICY DISABLE - CHANGE"
      fortimgr_policy:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        package: "lab"
        policy_id: "{{ second_policy_id }}"
        status: "disable"
      register: "fmg_results"

    - assert:
        that: "fmg_results['changed']"

    - name: "FORTIMANAGER SAVE - CHANGE"
      fortimgr_lock:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        adom: "lab"
        save: true
      register: "fmg_results"

    - assert:
        that: "fmg_results['changed']"

    - name: "MODIFY POLICY DISABLE AGAIN - NO CHANGE"
      fortimgr_policy:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        package: "lab"
        policy_id: "{{ second_policy_id }}"
        status: "disable"
      register: "fmg_results"

    - assert:
        that: "not fmg_results['changed']"

    - name: "FORTIMANAGER SAVE - CHANGE"
      fortimgr_lock:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        adom: "lab"
        save: true
      register: "fmg_results"

    - assert:
        that: "fmg_results['changed']"

    - name: "MODIFY POLICY ENABLE - CHANGE"
      fortimgr_policy:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        package: "lab"
        policy_id: "{{ second_policy_id }}"
        status: "enable"
      register: "fmg_results"

    - assert:
        that: "fmg_results['changed']"

    - name: "FORTIMANAGER SAVE - CHANGE"
      fortimgr_lock:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        adom: "lab"
        save: true
      register: "fmg_results"

    - assert:
        that: "fmg_results['changed']"

    - name: "CREATE POLICY USING MATCH MATCH FILTERS ALL - CHANGE"
      fortimgr_policy:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        package: "lab"
        match_filter: true
        match_filters: "all"
        global_label: "unit test"
        action: "accept"
        log_traffic: "all"
        destination_address:
          - "vip1"
          - "vip2"
        destination_intfc: "any"
        schedule: "always"
        service: "svc3"
        source_address:
          - "srcaddr4"
          - "srcaddr5"
        source_intfc: "any"
        nat: "enable"
        ip_pool: "enable"
        pool_name: "pool1"
        direction: "before"
        reference_policy_name: "unittest_explicit_deny"
      register: "policy3"

    - assert:
        that: "policy3['changed']"

    - name: "SET POLICY ID"
      set_fact:
        third_policy_id: "{{ policy3.config.params[0].data.policyid }}"

    - name: "CREATE POLICY USING MATCH MATCH FILTERS ALL AGAIN - NO CHANGE"
      fortimgr_policy:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        package: "lab"
        match_filter: true
        match_filters: "all"
        global_label: "unit test"
        action: "accept"
        log_traffic: "all"
        destination_address:
          - "vip1"
          - "vip2"
        destination_intfc: "any"
        schedule: "always"
        service: "svc3"
        source_address:
          - "srcaddr4"
          - "srcaddr5"
        source_intfc: "any"
        nat: "enable"
        ip_pool: "enable"
        pool_name: "pool1"
        direction: "before"
        reference_policy_name: "unittest_explicit_deny"
      register: "fmg_results"

    - assert:
        that: "not fmg_results['changed']"

    - name: "CREATE POLICY USING MATCH MATCH FILTERS NULL - CHANGE"
      fortimgr_policy:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        package: "lab"
        match_filter: true
        global_label: "unit test"
        action: "accept"
        log_traffic: "all"
        destination_address:
          - "vip2"
        destination_intfc: "any"
        schedule: "always"
        service: "svc3"
        source_address:
          - "srcaddr4"
          - "srcaddr5"
        source_intfc: "any"
        nat: "enable"
        ip_pool: "enable"
        pool_name: "pool1"
        direction: "before"
        reference_policy_name: "unittest_explicit_deny"
      register: "policy4"

    - assert:
        that: "policy4['changed']"

    - name: "SET POLICY ID"
      set_fact:
        fourth_policy_id: "{{ policy4.config.params[0].data.policyid }}"

    - name: "CREATE POLICY USING MATCH MATCH FILTERS NULL AGAIN - NO CHANGE"
      fortimgr_policy:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        package: "lab"
        match_filter: true
        global_label: "unit test"
        action: "accept"
        log_traffic: "all"
        destination_address:
          - "vip2"
        destination_intfc: "any"
        schedule: "always"
        service: "svc3"
        source_address:
          - "srcaddr4"
          - "srcaddr5"
        source_intfc: "any"
        nat: "enable"
        ip_pool: "enable"
        pool_name: "pool1"
        direction: "before"
        reference_policy_name: "unittest_explicit_deny"
      register: "fmg_results"

    - assert:
        that: "not fmg_results['changed']"

    - name: "CREATE POLICY USING MATCH MATCH FILTERS LIST MODIFY POLICY - CHANGE"
      fortimgr_policy:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        package: "lab"
        match_filter: true
        match_filters:
          - "source_address"
          - "destination_address"
        global_label: "unit test"
        action: "accept"
        log_traffic: "all"
        destination_address:
          - "vip2"
        destination_intfc: "any"
        schedule: "always"
        service: "svc2"
        source_address:
          - "srcaddr4"
          - "srcaddr5"
        source_intfc: "any"
        nat: "enable"
        ip_pool: "enable"
        pool_name: "pool1"
        direction: "before"
        reference_policy_name: "unittest_explicit_deny"
      register: "fmg_results"

    - assert:
        that: "fmg_results['changed']"

    - name: "CREATE POLICY USING MATCH MATCH FILTERS LARGER LIST NEW POLICY - CHANGE"
      fortimgr_policy:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        package: "lab"
        match_filter: true
        match_filters:
          - "source_address"
          - "destination_address"
          - "nat"
        global_label: "unit test"
        action: "accept"
        log_traffic: "all"
        destination_address:
          - "vip2"
        destination_intfc: "any"
        schedule: "always"
        service: "svc2"
        source_address:
          - "srcaddr4"
          - "srcaddr5"
        source_intfc: "any"
        nat: "disable"
        direction: "before"
        reference_policy_name: "unittest_explicit_deny"
      register: "policy5"

    - assert:
        that: "policy5['changed']"

    - name: "SET POLICY ID"
      set_fact:
        fifth_policy_id: "{{ policy5.config.params[0].data.policyid }}"

    - name: "CREATE POLICY USING MATCH MATCH FILTERS PARTIAL MATCH DOESN'T COUNT NEW POLICY - CHANGE"
      fortimgr_policy:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        package: "lab"
        match_filter: true
        match_filters:
          - "source_address"
          - "destination_address"
        global_label: "unit test"
        action: "accept"
        log_traffic: "all"
        destination_address:
          - "vip2"
        destination_intfc: "any"
        schedule: "always"
        service: "svc2"
        source_address:
          - "srcaddr4"
        source_intfc: "any"
        nat: "disable"
        direction: "before"
        reference_policy_name: "unittest_explicit_deny"
      register: "policy6"

    - assert:
        that: "policy6['changed']"

    - name: "SET POLICY ID"
      set_fact:
        sixth_policy_id: "{{ policy6.config.params[0].data.policyid }}"

    - name: "CREATE POLICY USING MATCH MATCH FILTERS NO MATCH_FILTER - FAIL"
      fortimgr_policy:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        package: "lab"
        match_filters: "all"
        global_label: "unit test"
        action: "accept"
        destination_address: "vip2"
        destination_intfc: "any"
        schedule: "always"
        service: "svc2"
        source_address: "srcaddr4"
        source_intfc: "any"
      ignore_errors: true
      register: "fmg_results"

    - assert:
        that: "fmg_results['failed']"

    - name: "CREATE POLICY USING MATCH MATCH FILTERS AND POLICY_ID - FAIL"
      fortimgr_policy:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        package: "lab"
        match_filter: true
        match_filters: "all"
        policy_id: "{{ first_policy_id }}"
        global_label: "unit test"
        action: "accept"
        destination_address: "vip2"
        destination_intfc: "any"
        schedule: "always"
        service: "svc2"
        source_address: "srcaddr4"
        source_intfc: "any"
      ignore_errors: true
      register: "fmg_results"

    - assert:
        that: "fmg_results['failed']"

    - name: "CREATE POLICY USING MATCH MATCH FILTERS AND POLICY_NAME - FAIL"
      fortimgr_policy:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        package: "lab"
        match_filter: true
        match_filters: "all"
        policy_name: "UNIT_TEST"
        global_label: "unit test"
        action: "accept"
        destination_address: "vip2"
        destination_intfc: "any"
        schedule: "always"
        service: "svc2"
        source_address: "srcaddr4"
        source_intfc: "any"
      ignore_errors: true
      register: "fmg_results"

    - assert:
        that: "fmg_results['failed']"

    - name: "CREATE POLICY USING MATCH MATCH FILTERS INVALID FILTER - FAIL"
      fortimgr_policy:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        package: "lab"
        match_filter: true
        match_filters: "FAKE"
        global_label: "unit test"
        action: "accept"
        destination_address: "vip2"
        destination_intfc: "any"
        schedule: "always"
        service: "svc2"
        source_address: "srcaddr4"
        source_intfc: "any"
      ignore_errors: true
      register: "fmg_results"

    - assert:
        that: "fmg_results['failed']"

    - name: "CREATE POLICY USING MATCH MATCH FILTERS FILTER NOT IN PARAM - FAIL"
      fortimgr_policy:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        package: "lab"
        match_filter: true
        match_filters: "nat"
        global_label: "unit test"
        action: "accept"
        destination_address: "vip2"
        destination_intfc: "any"
        schedule: "always"
        service: "svc2"
        source_address: "srcaddr4"
        source_intfc: "any"
      ignore_errors: true
      register: "fmg_results"

    - assert:
        that: "fmg_results['failed']"

    - name: "CREATE POLICY USING MATCH MATCH FILTERS MULTIPLE POLICIES MATCHED - FAIL"
      fortimgr_policy:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        package: "lab"
        match_filter: true
        match_filters: "action"
        global_label: "unit test"
        action: "accept"
        destination_address: "vip2"
        destination_intfc: "any"
        schedule: "always"
        service: "svc2"
        source_address: "srcaddr4"
        source_intfc: "any"
      ignore_errors: true
      register: "fmg_results"

    - assert:
        that: "fmg_results['failed']"


- name: "CLEANUP FORTIMANAGER ADDRESSES"
  hosts: "fortimanager"
  gather_facts: false
  tags: "cleanup"
  tasks:
    - name: "CLEANUP POLICY - CHANGE"
      fortimgr_policy:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        package: "lab"
        policy_id: "{{ item }}"
        state: "absent"
      loop:
        - "{{ first_policy_id }}"
        - "{{ second_policy_id }}"
        - "{{ third_policy_id }}"
        - "{{ fourth_policy_id }}"
        - "{{ fifth_policy_id }}"
        - "{{ sixth_policy_id }}"

    - name: "CLEANUP POLICY - CHANGE"
      fortimgr_policy:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        package: "lab"
        policy_name: "unittest_explicit_deny"
        state: "absent"

    - name: "CLEANUP POLICY - CHANGE"
      fortimgr_policy:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        package: "default"
        policy_name: "provider_policy1"
        state: "absent"

    - name: "CLEANUP ADDRESSES - CHANGE"
      fortimgr_address:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        address_name: "{{ item }}"
        state: "absent"
      loop:
        - "srcaddr1"
        - "srcaddr2"
        - "srcaddr3"
        - "srcaddr4"
        - "srcaddr5"
        - "srcaddr6"

    - name: "CLEANUP SERVICE - CHANGE"
      fortimgr_service:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        service_name: "{{ item }}"
        state: "absent"
      loop:
        - "svc1"
        - "svc2"
        - "svc3"

    - name: "CLEANUP IP POOL - CHANGE"
      fortimgr_ip_pool:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        pool_name: "{{ item }}"
        state: "absent"
      loop:
        - "pool1"
        - "pool2"
        - "pool3"

    - name: "CLEANUP VIP - CHANGE"
      fortimgr_vip:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        lock: false
        adom: "lab"
        vip_name: "{{ item }}"
        state: "absent"
      loop:
        - "vip1"
        - "vip2"
        - "vip3"

    - name: "FORTIMANAGER SAVE AND UNLOCK - CHANGE"
      fortimgr_lock:
        host: "{{ ansible_host }}"
        session_id: "{{ session_id }}"
        adom: "lab"
        save: true
        unlock: true
      tags: "unlock"
