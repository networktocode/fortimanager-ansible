---

- name: "FORTIMANAGER ADDRESS MAP UNITTESTS"
  hosts: "fortimanager"
  connection: "local"
  gather_facts: false
  tasks:
    - name: "CREATE ADDRESS MAP IPMASK LIST NOTATION - CHANGE"
      fortimgr_address_map:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        fortigate: "{{ item.fg }}"
        vdom: "root"
        address_name: "addr1"
        address_type: "ipmask"
        allow_routing: "enable"
        color: 1
        subnet: "{{ item.subnet }}"
        comment: "ipmask unit test"
      loop:
        - fg: "lab1"
          subnet:
            - "10.10.10.10"
            - "255.255.255.255"
        - fg: "lab2"
          subnet:
            - "10.10.20.10"
            - "255.255.255.255"
      register: "fmg_results"

    - assert:
        that: "item['changed']"
      loop: "{{ fmg_results['results'] }}"

    - name: "CREATE ADDRESS MAP IPMASK AGAIN LIST NOTATION - NO CHANGE"
      fortimgr_address_map:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        fortigate: "{{ item.fg }}"
        vdom: "root"
        address_name: "addr1"
        address_type: "ipmask"
        allow_routing: "enable"
        color: 1
        subnet: "{{ item.subnet }}"
        comment: "ipmask unit test"
      loop:
        - fg: "lab1"
          subnet:
            - "10.10.10.10"
            - "255.255.255.255"
        - fg: "lab2"
          subnet:
            - "10.10.20.10"
            - "255.255.255.255"
      register: "fmg_results"

    - assert:
        that: "not item['changed']"
      loop: "{{ fmg_results['results'] }}"

    - name: "SET PROVIDER - NO CHANGE"
      set_fact:
        provider:
          host: "{{ ansible_host }}"
          username: "{{ ansible_user }}"
          password: "{{ ansible_password }}"
          adom: "lab"
          fortigate: "lab1"
          vdom: "root"
          address_name: "addr1"
          address_type: "ipmask"
          allow_routing: "enable"
          color: "1"
          subnet: "10.10.10.10/32"
          comment: "ipmask unit test"

    - name: "CREATE ADDRESS MAP IPMASK WITH PROVIDER - NO CHANGE"
      fortimgr_address_map:
        provider: "{{ provider }}"
      register: "fmg_results"

    - assert:
        that: "not fmg_results['changed']"

    - name: "CREATE ADDRESS MAP IPMASK OVERRIDE PROVIDER - CHANGE"
      fortimgr_address_map:
        provider: "{{ provider }}"
        fortigate: "lab2"
        address_name: "provider_addr1"
        address_type: "ipmask"
        allow_routing: "disable"
        color: 3
        subnet: "10.10.10.8/30"
        comment: "provider ipmask unit test"
      register: "fmg_results"

    - assert:
        that: "fmg_results['changed']"

    - name: "CREATE ADDRESS MAP IPMASK CIDR NOTATION - CHANGE"
      fortimgr_address_map:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        fortigate: "{{ item.fg }}"
        vdom: "root"
        address_name: "addr2"
        address_type: "ipmask"
        allow_routing: "enable"
        color: 1
        subnet: "{{ item.subnet }}"
        comment: "ipmask unit test"
      loop:
        - fg: "lab1"
          subnet: "10.20.10.10/32"
        - fg: "lab2"
          subnet: "10.20.20.10/32"
      register: "fmg_results"

    - assert:
        that: "item['changed']"
      loop: "{{ fmg_results['results'] }}"

    - name: "CREATE ADDRESS MAP IPMASK CIDR NOTATION AGAIN - NO CHANGE"
      fortimgr_address_map:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        fortigate: "{{ item.fg }}"
        vdom: "root"
        address_name: "addr2"
        address_type: "ipmask"
        allow_routing: "enable"
        color: 1
        subnet: "{{ item.subnet }}"
        comment: "ipmask unit test"
      loop:
        - fg: "lab1"
          subnet: "10.20.10.10/32"
        - fg: "lab2"
          subnet: "10.20.20.10/32"
      register: "fmg_results"

    - assert:
        that: "not item['changed']"
      loop: "{{ fmg_results['results'] }}"

    - name: "CREATE ADDRESS MAP IPMASK CIDR NOTATION BAD MASK - FAIL"
      fortimgr_address_map:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        fortigate: "{{ item.fg }}"
        vdom: "root"
        address_name: "addr3"
        address_type: "ipmask"
        allow_routing: "enable"
        color: 1
        subnet: "{{ item.subnet }}"
        comment: "ipmask unit test"
      loop:
        - fg: "lab1"
          subnet: "10.10.10.10/33"
        - fg: "lab2"
          subnet: "10.10.20.10/33"
      ignore_errors: true
      register: "fmg_results"

    - assert:
        that: "item['failed']"
      loop: "{{ fmg_results['results'] }}"

    - name: "CREATE ADDRESS MAP IPMASK HOST NOTATION - CHANGE"
      fortimgr_address_map:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        fortigate: "{{ item.fg }}"
        vdom: "root"
        address_name: "addr4"
        address_type: "ipmask"
        allow_routing: "enable"
        color: 1
        subnet: "{{ item.subnet }}"
        comment: "ipmask unit test"
      loop:
        - fg: "lab1"
          subnet: "10.20.10.15"
        - fg: "lab2"
          subnet: "10.20.20.15"
      register: "fmg_results"

    - assert:
        that: "item['changed']"
      loop: "{{ fmg_results['results'] }}"

    - name: "CREATE ADDRESS MAP IPMASK HOST NOTATION AGAIN - NO CHANGE"
      fortimgr_address_map:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        fortigate: "{{ item.fg }}"
        vdom: "root"
        address_name: "addr4"
        address_type: "ipmask"
        allow_routing: "enable"
        color: 1
        subnet: "{{ item.subnet }}"
        comment: "ipmask unit test"
      loop:
        - fg: "lab1"
          subnet: "10.20.10.15"
        - fg: "lab2"
          subnet: "10.20.20.15"
      register: "fmg_results"

    - assert:
        that: "not item['changed']"
      loop: "{{ fmg_results['results'] }}"

    - name: "CREATE ADDRESS MAP IPMASK NET AND MASK NOTATION - CHANGE"
      fortimgr_address_map:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        fortigate: "{{ item.fg }}"
        vdom: "root"
        address_name: "addr5"
        address_type: "ipmask"
        allow_routing: "enable"
        color: 1
        network_address: "{{ item.network }}"
        network_mask: "{{ item.mask }}"
        comment: "ipmask unit test"
      loop:
        - fg: "lab1"
          network: "10.30.10.10"
          mask: "255.255.255.255"
        - fg: "lab2"
          network: "10.30.20.10"
          mask: "255.255.255.255"
      register: "fmg_results"

    - assert:
        that: "item['changed']"
      loop: "{{ fmg_results['results'] }}"

    - name: "CREATE ADDRESS MAP IPMASK NET AND MASK NOTATION AGAIN - NO CHANGE"
      fortimgr_address_map:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        fortigate: "{{ item.fg }}"
        vdom: "root"
        address_name: "addr5"
        address_type: "ipmask"
        allow_routing: "enable"
        color: 1
        network_address: "{{ item.network }}"
        network_mask: "{{ item.mask }}"
        comment: "ipmask unit test"
      loop:
        - fg: "lab1"
          network: "10.30.10.10"
          mask: "255.255.255.255"
        - fg: "lab2"
          network: "10.30.20.10"
          mask: "255.255.255.255"
      register: "fmg_results"

    - assert:
        that: "not item['changed']"
      loop: "{{ fmg_results['results'] }}"

    - name: "CREATE ADDRESS MAP IPRANGE - CHANGE"
      fortimgr_address_map:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        fortigate: "{{ item.fg }}"
        vdom: "root"
        address_name: "addr6"
        address_type: "iprange"
        allow_routing: "disable"
        color: 2
        start_ip: "{{ item.start }}"
        end_ip: "{{ item.end }}"
        comment: "iprange unit test"
      loop:
        - fg: "lab1"
          start: "10.10.10.11"
          end: "10.10.10.14"
        - fg: "lab2"
          start: "10.10.20.11"
          end: "10.10.20.14"
      register: "fmg_results"

    - assert:
        that: "item['changed']"
      loop: "{{ fmg_results['results'] }}"

    - name: "CREATE ADDRESS MAP IPRANGE AGAIN - NO CHANGE"
      fortimgr_address_map:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        fortigate: "{{ item.fg }}"
        vdom: "root"
        address_name: "addr6"
        address_type: "iprange"
        allow_routing: "disable"
        color: 2
        start_ip: "{{ item.start }}"
        end_ip: "{{ item.end }}"
        comment: "iprange unit test"
      loop:
        - fg: "lab1"
          start: "10.10.10.11"
          end: "10.10.10.14"
        - fg: "lab2"
          start: "10.10.20.11"
          end: "10.10.20.14"
      register: "fmg_results"

    - assert:
        that: "not item['changed']"
      loop: "{{ fmg_results['results'] }}"

    - name: "CREATE ADDRESS MAP WILDCARD LIST NOTATION - CHANGE"
      fortimgr_address_map:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        fortigate: "{{ item.fg }}"
        vdom: "root"
        address_name: "addr7"
        address_type: "wildcard"
        wildcard: "{{ item.wildcard }}"
        comment: "wildcard unit test"
      loop:
        - fg: "lab1"
          wildcard:
            - "10.0.10.0"
            - "0.255.0.255"
        - fg: "lab2"
          wildcard:
            - "10.0.20.0"
            - "0.255.0.255"
      register: "fmg_results"

    - assert:
        that: "item['changed']"
      loop: "{{ fmg_results['results'] }}"

    - name: "CREATE ADDRESS MAP WILDCARD LIST NOTATION AGAIN - NO CHANGE"
      fortimgr_address_map:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        fortigate: "{{ item.fg }}"
        vdom: "root"
        address_name: "addr7"
        address_type: "wildcard"
        wildcard: "{{ item.wildcard }}"
        comment: "wildcard unit test"
      loop:
        - fg: "lab1"
          wildcard:
            - "10.0.10.0"
            - "0.255.0.255"
        - fg: "lab2"
          wildcard:
            - "10.0.20.0"
            - "0.255.0.255"
      register: "fmg_results"

    - assert:
        that: "not item['changed']"
      loop: "{{ fmg_results['results'] }}"

    - name: "CREATE ADDRESS MAP WILDCARD CIDR NOTATION - CHANGE"
      fortimgr_address_map:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        fortigate: "{{ item.fg }}"
        vdom: "root"
        address_name: "addr8"
        address_type: "wildcard"
        wildcard: "{{ item.wildcard }}"
        comment: "wildcard unit test"
      loop:
        - fg: "lab1"
          wildcard: "10.0.10.0/15"
        - fg: "lab2"
          wildcard: "10.0.20.0/15"
      register: "fmg_results"

    - assert:
        that: "item['changed']"
      loop: "{{ fmg_results['results'] }}"

    - name: "CREATE ADDRESS MAP WILDCARD CIDR NOTATION AGAIN - NO CHANGE"
      fortimgr_address_map:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        fortigate: "{{ item.fg }}"
        vdom: "root"
        address_name: "addr8"
        address_type: "wildcard"
        wildcard: "{{ item.wildcard }}"
        comment: "wildcard unit test"
      loop:
        - fg: "lab1"
          wildcard: "10.0.10.0/15"
        - fg: "lab2"
          wildcard: "10.0.20.0/15"
      register: "fmg_results"

    - assert:
        that: "not item['changed']"
      loop: "{{ fmg_results['results'] }}"

    - name: "CREATE ADDRESS MAP WILDCARD CIDR NOTATION BAD MASK - FAIL"
      fortimgr_address_map:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        fortigate: "{{ item.fg }}"
        vdom: "root"
        address_name: "addr9"
        address_type: "wildcard"
        wildcard: "{{ item.wildcard }}"
        comment: "wildcard unit test"
      loop:
        - fg: "lab1"
          wildcard: "10.0.10.0/33"
        - fg: "lab2"
          wildcard: "10.0.20.0/33"
      ignore_errors: true
      register: "fmg_results"

    - assert:
        that: "item['failed']"
      loop: "{{ fmg_results['results'] }}"

    - name: "CREATE ADDRESS MAP WILDCARD WILCARD AND MASK NOTATION - CHANGE"
      fortimgr_address_map:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        fortigate: "{{ item.fg }}"
        vdom: "root"
        address_name: "addr10"
        address_type: "wildcard"
        wildcard_address: "{{ item.address }}"
        wildcard_mask: "{{ item.mask }}"
        comment: "wildcard unit test"
      loop:
        - fg: "lab1"
          address: "10.0.10.0"
          mask: "0.0.255.0"
        - fg: "lab2"
          address: "10.0.20.0"
          mask: "0.0.255.0"
      register: "fmg_results"

    - assert:
        that: "item['changed']"
      loop: "{{ fmg_results['results'] }}"

    - name: "CREATE ADDRESS MAP WILDCARD WILCARD AND MASK NOTATION - NO CHANGE"
      fortimgr_address_map:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        fortigate: "{{ item.fg }}"
        vdom: "root"
        address_name: "addr10"
        address_type: "wildcard"
        wildcard_address: "{{ item.address }}"
        wildcard_mask: "{{ item.mask }}"
        comment: "wildcard unit test"
      loop:
        - fg: "lab1"
          address: "10.0.10.0"
          mask: "0.0.255.0"
        - fg: "lab2"
          address: "10.0.20.0"
          mask: "0.0.255.0"
      register: "fmg_results"

    - assert:
        that: "not item['changed']"
      loop: "{{ fmg_results['results'] }}"

    - name: "DELETE MAPPING FROM ADDRESS MAP - CHANGE"
      fortimgr_address_map:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        fortigate: "lab2"
        vdom: "root"
        address_name: "addr1"
        address_type: "ipmask"
        allow_routing: "enable"
        comment: "ipmask unit test"
        state: "absent"
      register: "fmg_results"

    - assert:
        that: "fmg_results['changed']"

    - name: "DELETE MAPPING FROM ADDRESS MAP AGAIN - NO CHANGE"
      fortimgr_address_map:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        fortigate: "lab2"
        vdom: "root"
        address_name: "addr1"
        address_type: "ipmask"
        allow_routing: "enable"
        comment: "ipmask unit test"
        state: "absent"
      register: "fmg_results"

    - assert:
        that: "not fmg_results['changed']"

    - name: "ADD MAPPING FOR ADDRESS MAP - CHANGE"
      fortimgr_address_map:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        fortigate: "lab2"
        vdom: "root"
        address_name: "addr1"
        address_type: "ipmask"
        allow_routing: "enable"
        subnet:
          - "10.10.20.10"
          - "255.255.255.255"
        comment: "ipmask unit test"
      register: "fmg_results"

    - assert:
        that: "fmg_results['changed']"

    - name: "DELETE ALL MAPPINGS FROM ADDRESS MAP - CHANGE"
      fortimgr_address_map:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        fortigate: "{{ item }}"
        vdom: "root"
        address_name: "addr1"
        state: "absent"
      loop:
        - "lab1"
        - "lab2"
      register: "fmg_results"

    - assert:
        that: "item['changed']"
      loop: "{{ fmg_results['results'] }}"

    - name: "CREATE ADDRESS MAP IPMASK NO ADOM - FAIL"
      fortimgr_address_map:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        fortigate: "lab1"
        vdom: "root"
        address_name: "addr11"
        address_type: "ipmask"
        subnet:
          - "10.1.1.1"
          - "255.255.255.255"
      ignore_errors: true
      register: "fmg_results"

    - assert:
        that: "fmg_results['failed']"

    - name: "CREATE ADDRESS MAP IPMASK NO FORTIGATE - FAIL"
      fortimgr_address_map:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        vdom: "root"
        address_name: "addr11"
        address_type: "ipmask"
        subnet:
          - "10.1.1.1"
          - "255.255.255.255"
      ignore_errors: true

    - assert:
        that: "fmg_results['failed']"

    - name: "CREATE ADDRESS MAP IPMASK NO VDOM - FAIL"
      fortimgr_address_map:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        fortigate: "lab1"
        address_name: "addr11"
        address_type: "ipmask"
        subnet:
          - "10.1.1.1"
          - "255.255.255.255"
      ignore_errors: true

    - assert:
        that: "fmg_results['failed']"

    - name: "CREATE ADDRESS IPMASK NO NAME - FAIL"
      fortimgr_address_map:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        fortigate: "lab1"
        vdom: "root"
        address_type: "ipmask"
        subnet:
          - "10.1.1.1"
          - "255.255.255.255"
      ignore_errors: true

    - assert:
        that: "fmg_results['failed']"

    - name: "CREATE ADDRESS IPMASK SUBNET AND NETWORK_MASK - FAIL"
      fortimgr_address_map:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        fortigate: "lab1"
        vdom: "root"
        address_name: "addr7"
        address_type: "ipmask"
        subnet: "10.1.1.1/32"
        network_mask: "255.255.255.255"
      ignore_errors: true

    - assert:
        that: "fmg_results['failed']"

    - name: "CREATE ADDRESS IPMASK SUBNET AND NETWORK_MASK PROVIDER - FAIL"
      fortimgr_address_map:
        provider:
          host: "{{ ansible_host }}"
          username: "{{ ansible_user }}"
          password: "{{ ansible_password }}"
          adom: "lab"
          fortigate: "lab1"
          vdom: "root"
          address_name: "addr7"
          address_type: "ipmask"
          subnet: "10.1.1.1/32"
          network_mask: "255.255.255.255"
      ignore_errors: true

    - assert:
        that: "fmg_results['failed']"

    - name: "CREATE ADDRESS WILDCARD WILDCARD AND WILDCARD_MASK - FAIL"
      fortimgr_address_map:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        fortigate: "lab1"
        vdom: "root"
        address_name: "addr7"
        address_type: "wildcard"
        wildcard: "10.1.1.1/32"
        wildcard_mask: "255.255.255.255"
      ignore_errors: true

    - assert:
        that: "fmg_results['failed']"

    - name: "CREATE ADDRESS WILDCARD WILDCARD AND WILDCARD_MASK PROVIDER - FAIL"
      fortimgr_address_map:
        provider:
          host: "{{ ansible_host }}"
          username: "{{ ansible_user }}"
          password: "{{ ansible_password }}"
          adom: "lab"
          fortigate: "lab1"
          vdom: "root"
          address_name: "addr7"
          address_type: "wildcard"
          wildcard: "10.1.1.1/32"
          wildcard_mask: "255.255.255.255"
      ignore_errors: true

    - assert:
        that: "fmg_results['failed']"

    - name: "CREATE ADDRESS IPMASK NETWORK_ADDRESS W/O NETWORK_MASK - FAIL"
      fortimgr_address_map:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        fortigate: "lab1"
        vdom: "root"
        address_name: "addr7"
        address_type: "ipmask"
        network_address: "10.1.1.1"
      ignore_errors: true

    - assert:
        that: "fmg_results['failed']"

    - name: "CREATE ADDRESS IPMASK NETWORK_ADDRESS W/O NETWORK_MASK PROVIDER - FAIL"
      fortimgr_address_map:
        provider:
          host: "{{ ansible_host }}"
          username: "{{ ansible_user }}"
          password: "{{ ansible_password }}"
          adom: "lab"
          fortigate: "lab1"
          vdom: "root"
          address_name: "addr7"
          address_type: "ipmask"
          network_address: "10.1.1.1"
      ignore_errors: true

    - assert:
        that: "fmg_results['failed']"

    - name: "CREATE ADDRESS IPMASK NETWORK_MASK W/O NETWORK_ADDRESS - FAIL"
      fortimgr_address_map:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        fortigate: "lab1"
        vdom: "root"
        address_name: "addr7"
        address_type: "ipmask"
        network_mask: "255.255.255.255"
      ignore_errors: true

    - assert:
        that: "fmg_results['failed']"

    - name: "CREATE ADDRESS IPMASK NETWORK_MASK W/O NETWORK_ADDRESS PROVIDER - FAIL"
      fortimgr_address_map:
        provider:
          host: "{{ ansible_host }}"
          username: "{{ ansible_user }}"
          password: "{{ ansible_password }}"
          adom: "lab"
          fortigate: "lab1"
          vdom: "root"
          address_name: "addr7"
          address_type: "ipmask"
          network_mask: "255.255.255.255"
      ignore_errors: true

    - assert:
        that: "fmg_results['failed']"

    - name: "CREATE ADDRESS WILDCARD WILDCARD_ADDRESS W/O WILDCARD_MASK - FAIL"
      fortimgr_address_map:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        fortigate: "lab1"
        vdom: "root"
        address_name: "addr7"
        address_type: "wildcard"
        wildcard_address: "10.1.1.1"
      ignore_errors: true

    - assert:
        that: "fmg_results['failed']"

    - name: "CREATE ADDRESS WILDCARD WILDCARD_ADDRESS W/O WILDCARD_MASK PROVIDER - FAIL"
      fortimgr_address_map:
        provider:
          host: "{{ ansible_host }}"
          username: "{{ ansible_user }}"
          password: "{{ ansible_password }}"
          adom: "lab"
          fortigate: "lab1"
          vdom: "root"
          address_name: "addr7"
          address_type: "wildcard"
          wildcard_address: "10.1.1.1"
      ignore_errors: true

    - assert:
        that: "fmg_results['failed']"

    - name: "CREATE ADDRESS WILDCARD WILDCARD_ADDRESS W/O WILDCARD_MASK - FAIL"
      fortimgr_address_map:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        fortigate: "lab1"
        vdom: "root"
        address_name: "addr7"
        address_type: "wildcard"
        wildcard_mask: "255.255.0.255"
      ignore_errors: true

    - assert:
        that: "fmg_results['failed']"

    - name: "CREATE ADDRESS WILDCARD WILDCARD_ADDRESS W/O WILDCARD_MASK PROVIDER - FAIL"
      fortimgr_address_map:
        provider:
          host: "{{ ansible_host }}"
          username: "{{ ansible_user }}"
          password: "{{ ansible_password }}"
          adom: "lab"
          fortigate: "lab1"
          vdom: "root"
          address_name: "addr7"
          address_type: "wildcard"
          wildcard_mask: "255.255.0.255"
      ignore_errors: true

    - assert:
        that: "fmg_results['failed']"


- name: "CLEANUP FORTIMANAGER ADDRESSES"
  hosts: "fortimanager"
  connection: local
  gather_facts: false
  tags: "cleanup"
  
  tasks:
    - name: "CLEANUP ADDRESS OBJECTS - CHANGE"
      fortimgr_address:
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        adom: "lab"
        address_name: "{{ item }}"
        state: "absent"
      loop:
        - "addr1"
        - "addr2"
        - "addr3"
        - "addr4"
        - "addr5"
        - "addr6"
        - "addr7"
        - "addr8"
        - "addr9"
        - "addr10"
        - "addr11"
        - "provider_addr1"

